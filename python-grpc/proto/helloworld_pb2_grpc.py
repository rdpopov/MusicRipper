# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import helloworld_pb2 as proto_dot_helloworld__pb2


class GreeterStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.QueryMeta = channel.unary_unary(
                '/helloworld.Greeter/QueryMeta',
                request_serializer=proto_dot_helloworld__pb2.SongName.SerializeToString,
                response_deserializer=proto_dot_helloworld__pb2.SongMeta.FromString,
                )
        self.AddMeta = channel.unary_unary(
                '/helloworld.Greeter/AddMeta',
                request_serializer=proto_dot_helloworld__pb2.SongMeta.SerializeToString,
                response_deserializer=proto_dot_helloworld__pb2.AddResult.FromString,
                )
        self.UpdateMeta = channel.unary_unary(
                '/helloworld.Greeter/UpdateMeta',
                request_serializer=proto_dot_helloworld__pb2.SongMeta.SerializeToString,
                response_deserializer=proto_dot_helloworld__pb2.AddResult.FromString,
                )


class GreeterServicer(object):
    """Missing associated documentation comment in .proto file."""

    def QueryMeta(self, request, context):
        """rpc SayHello (HelloRequest) returns (HelloReply); 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'QueryMeta': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryMeta,
                    request_deserializer=proto_dot_helloworld__pb2.SongName.FromString,
                    response_serializer=proto_dot_helloworld__pb2.SongMeta.SerializeToString,
            ),
            'AddMeta': grpc.unary_unary_rpc_method_handler(
                    servicer.AddMeta,
                    request_deserializer=proto_dot_helloworld__pb2.SongMeta.FromString,
                    response_serializer=proto_dot_helloworld__pb2.AddResult.SerializeToString,
            ),
            'UpdateMeta': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMeta,
                    request_deserializer=proto_dot_helloworld__pb2.SongMeta.FromString,
                    response_serializer=proto_dot_helloworld__pb2.AddResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'helloworld.Greeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Greeter(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def QueryMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/helloworld.Greeter/QueryMeta',
            proto_dot_helloworld__pb2.SongName.SerializeToString,
            proto_dot_helloworld__pb2.SongMeta.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/helloworld.Greeter/AddMeta',
            proto_dot_helloworld__pb2.SongMeta.SerializeToString,
            proto_dot_helloworld__pb2.AddResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/helloworld.Greeter/UpdateMeta',
            proto_dot_helloworld__pb2.SongMeta.SerializeToString,
            proto_dot_helloworld__pb2.AddResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
