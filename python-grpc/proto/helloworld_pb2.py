# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/helloworld.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='proto/helloworld.proto',
  package='helloworld',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x16proto/helloworld.proto\x12\nhelloworld\"\x1d\n\x08SongName\x12\x11\n\tsong_name\x18\x01 \x01(\t\"g\n\x08SongMeta\x12\r\n\x05\x66name\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0e\n\x06\x61rtist\x18\x03 \x01(\t\x12\r\n\x05\x61lbum\x18\x04 \x01(\t\x12\x0f\n\x07\x61rtwork\x18\x05 \x01(\t\x12\x0e\n\x06lyrics\x18\x06 \x01(\t\"\x1b\n\tAddResult\x12\x0e\n\x06result\x18\x01 \x01(\t2\xb5\x01\n\x07Greeter\x12\x37\n\tQueryMeta\x12\x14.helloworld.SongName\x1a\x14.helloworld.SongMeta\x12\x36\n\x07\x41\x64\x64Meta\x12\x14.helloworld.SongMeta\x1a\x15.helloworld.AddResult\x12\x39\n\nUpdateMeta\x12\x14.helloworld.SongMeta\x1a\x15.helloworld.AddResultb\x06proto3'
)




_SONGNAME = _descriptor.Descriptor(
  name='SongName',
  full_name='helloworld.SongName',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='song_name', full_name='helloworld.SongName.song_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=38,
  serialized_end=67,
)


_SONGMETA = _descriptor.Descriptor(
  name='SongMeta',
  full_name='helloworld.SongMeta',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='fname', full_name='helloworld.SongMeta.fname', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='helloworld.SongMeta.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='artist', full_name='helloworld.SongMeta.artist', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='album', full_name='helloworld.SongMeta.album', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='artwork', full_name='helloworld.SongMeta.artwork', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='lyrics', full_name='helloworld.SongMeta.lyrics', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=69,
  serialized_end=172,
)


_ADDRESULT = _descriptor.Descriptor(
  name='AddResult',
  full_name='helloworld.AddResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='helloworld.AddResult.result', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=174,
  serialized_end=201,
)

DESCRIPTOR.message_types_by_name['SongName'] = _SONGNAME
DESCRIPTOR.message_types_by_name['SongMeta'] = _SONGMETA
DESCRIPTOR.message_types_by_name['AddResult'] = _ADDRESULT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SongName = _reflection.GeneratedProtocolMessageType('SongName', (_message.Message,), {
  'DESCRIPTOR' : _SONGNAME,
  '__module__' : 'proto.helloworld_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.SongName)
  })
_sym_db.RegisterMessage(SongName)

SongMeta = _reflection.GeneratedProtocolMessageType('SongMeta', (_message.Message,), {
  'DESCRIPTOR' : _SONGMETA,
  '__module__' : 'proto.helloworld_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.SongMeta)
  })
_sym_db.RegisterMessage(SongMeta)

AddResult = _reflection.GeneratedProtocolMessageType('AddResult', (_message.Message,), {
  'DESCRIPTOR' : _ADDRESULT,
  '__module__' : 'proto.helloworld_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.AddResult)
  })
_sym_db.RegisterMessage(AddResult)



_GREETER = _descriptor.ServiceDescriptor(
  name='Greeter',
  full_name='helloworld.Greeter',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=204,
  serialized_end=385,
  methods=[
  _descriptor.MethodDescriptor(
    name='QueryMeta',
    full_name='helloworld.Greeter.QueryMeta',
    index=0,
    containing_service=None,
    input_type=_SONGNAME,
    output_type=_SONGMETA,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='AddMeta',
    full_name='helloworld.Greeter.AddMeta',
    index=1,
    containing_service=None,
    input_type=_SONGMETA,
    output_type=_ADDRESULT,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateMeta',
    full_name='helloworld.Greeter.UpdateMeta',
    index=2,
    containing_service=None,
    input_type=_SONGMETA,
    output_type=_ADDRESULT,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_GREETER)

DESCRIPTOR.services_by_name['Greeter'] = _GREETER

# @@protoc_insertion_point(module_scope)
